name: Deploy to Cloud Function && Scheduler

on:
  push:
    branches:
      - test
  pull_request:
    branches:
      - test
  workflow_dispatch:
    inputs:
      full_deploy:
        description: 'Desplegar todos los scripts SQL nuevamente'
        required: false
        default: 'false'
        type: choice
        options:
          - 'false'
          - 'true'


jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'main' && 'main' || 'test' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set environment variables and credentials
        run: |
          #echo "ENV=${{ github.ref_name }}" >> $GITHUB_ENV
          echo "GCP_PROJECT_ID=${{ vars.GCP_PROJECT_ID }}" >> $GITHUB_ENV
          echo "GCP_REGION=${{ vars.GCP_REGION }}" >> $GITHUB_ENV
          echo "GCP_ARTIFACT_REPO=${{ vars.GCP_ARTIFACT_REPO }}" >> $GITHUB_ENV
          echo "GCP_ARTIFACT_REGION=${{ vars.GCP_ARTIFACT_REGION }}" >> $GITHUB_ENV
          echo "GCP_SA_NAME=${{ vars.GCP_SA_NAME }}" >> $GITHUB_ENV
          echo "GCP_SP_DATASET_NAME=${{ vars.GCP_SP_DATASET_NAME }}" >> $GITHUB_ENV

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Deploy Cloud Function
        uses: google-github-actions/deploy-cloud-functions@v3
        with:
          name: my-cloud-function-demo-maintain
          runtime: python310
          entry_point: main
          source_dir: ./maintain
          region: ${{ env.GCP_REGION }}
          trigger_http: true
          allow_unauthenticated: true
          service_account: ${{ env.GCP_SA_NAME }}@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com

      - name: Deploy Scheduler Job
        run: |
          FUNCTION_URL="https://${GCP_REGION}-${GCP_PROJECT_ID}.cloudfunctions.net/my-cloud-function-demo-maintain"
          SCHEDULE_TIME="42 * * * *"  # Todos los dÃ­as a las 55 minutos de cada hora

          if gcloud scheduler jobs describe my-scheduler-demo-maintain \
            --location=${GCP_REGION} --project=${GCP_PROJECT_ID} > /dev/null 2>&1; then
            echo "Updating existing job..."
            gcloud scheduler jobs update http my-scheduler-demo-maintain \
              --schedule="${SCHEDULE_TIME}" \
              --uri="${FUNCTION_URL}" \
              --http-method=POST \
              --oidc-service-account-email="$GCP_SA_NAME@$GCP_PROJECT_ID.iam.gserviceaccount.com" \
              --time-zone="America/Argentina/Buenos_Aires" \
              --project="${GCP_PROJECT_ID}" \
              --location="${GCP_REGION}" \
              --quiet
          else
            echo "Creating new job..."
            gcloud scheduler jobs create http my-scheduler-demo-maintain \
              --schedule="${SCHEDULE_TIME}" \
              --uri="${FUNCTION_URL}" \
              --http-method=POST \
              --oidc-service-account-email="$GCP_SA_NAME@$GCP_PROJECT_ID.iam.gserviceaccount.com" \
              --time-zone="America/Argentina/Buenos_Aires" \
              --project="${GCP_PROJECT_ID}" \
              --location="${GCP_REGION}" \
              --quiet
          fi
